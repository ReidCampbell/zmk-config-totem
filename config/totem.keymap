//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        td_copy_cut: td_copy_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COPY_CUT";
            #binding-cells = <0>;
            bindings = <&copy_macro>, <&cut_macro>;

            tapping-term-ms = <300>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LAYER_MOUSE";
            #binding-cells = <2>;
            flavor = "balanced";         // or "tap-preferred" / "hold-preferred"
            tapping-term-ms = <200>;     // tweak to your liking
            bindings = <&mo>, <&mkp>;

            // 1st: hold behavior, 2nd: tap behavior
        };
    };

    combos {
        compatible = "zmk,combos";

        Arrow {
            bindings = <&Arrow>;
            key-positions = <8 9>;
        };

        Paste {
            bindings = <&paste_macro>;
            key-positions = <24 23>;
        };

        CurlyL {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17 18>;
        };

        ParaL {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        SquareL {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 28>;
        };

        SquareR {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <29 28>;
        };

        ParaR {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        CurlyR {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <18 17>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <11 12 13>;
        };

        Undo {
            timeout-ms = <50>;
            bindings = <&undo_macro>;
            key-positions = <2 3>;
        };

        Copy {
            bindings = <&td_copy_cut>;
            key-positions = <12 13>;
        };

        switch {
            bindings = <&kp LS(LA(LC(LG(F12))))>;
            key-positions = <4 5>;
        };

        switch2 {
            bindings = <&kp LS(LA(LC(LG(F11))))>;
            key-positions = <14 15>;
        };

        switch3 {
            bindings = <&kp LS(LC(LA(LG(F13))))>;
            key-positions = <25 26>;
        };

        Switch4 {
            bindings = <&kp LS(LA(LC(LG(F13))))>;
            key-positions = <3 6>;
        };

        Switch5 {
            bindings = <&kp LS(LA(LC(LG(F14))))>;
            key-positions = <16 13>;
        };

        Switch6 {
            bindings = <&kp LS(LA(LC(LG(F14))))>;
            key-positions = <24 27>;
        };

        Esc {
            bindings = <&kp ESC>;
            key-positions = <0 9>;
        };
    };

    macros {
        Arrow: Arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW";
        };

        copy_macro: copy_macro {
            compatible = "zmk,behavior-macro";
            label = "COPY_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
        };

        cut_macro: cut_macro {
            compatible = "zmk,behavior-macro";
            label = "CUT_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LG(X)>;
        };

        paste_macro: paste_macro {
            compatible = "zmk,behavior-macro";
            label = "PASTE_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
        };

        undo_macro: undo_macro {
            compatible = "zmk,behavior-macro";
            label = "UNDO_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LG(Z)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        layer_4 {
            label = "BASEtttntntntn";
            bindings = <
                            &kp W              &kp L         &kp Y            &kp P            &kp B                               &kp Z      &kp F            &kp O            &kp U                 &kp SQT
                            &hrm LEFT_SHIFT C  &hrm LCTRL R  &hrm LEFT_ALT S  &hrm LEFT_GUI T  &kp G                               &kp M      &hrm LEFT_GUI N  &hrm LEFT_ALT E  &hrm RIGHT_CONTROL I  &hrm LEFT_SHIFT A
&kp LA(LC(LG(LEFT_SHIFT)))  &kp Q              &kp J         &kp V            &kp D            &kp K                               &kp X      &kp H            &kp FSLH         &kp COMMA             &kp DOT            &kp SEMI
                                                             &kp TAB          &lt 2 SPACE      &mt LA(LC(LG(LEFT_SHIFT))) ENTER    &ht 3 MB4  &lt 1 BACKSPACE  &mkp MB5
            >;
        };

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &trans                      &kp N7                 &kp N8                    &kp N9                    &trans      &trans    &kp PAGE_DOWN   &kp UP          &kp PAGE_UP      &trans
        &mt LEFT_SHIFT KP_NUMBER_0  &mt LCTRL KP_NUMBER_4  &mt LEFT_ALT KP_NUMBER_5  &mt LEFT_GUI KP_NUMBER_6  &trans      &kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&trans  &trans                      &kp N1                 &kp N2                    &kp N3                    &trans      &trans    &trans          &trans          &trans           &trans   &trans
                                                           &trans                    &trans                    &kp LGUI    &trans    &trans          &trans
            >;
        };

        sim_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "SYM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ˆ     ┃     &     ┃     Ü     ┃     '     ┃     "     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     Ä     ┃           ┃    SZ     ┃           ┃           ┃   ┃   MUTE    ┃   YEN     ┃   EURO    ┃  POUND    ┃     Ö     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃  EMAIL1   ┃  EMAIL2   ┃           ┃           ┃           ┃   ┃   VOL-    ┃   VOL+    ┃   LAST    ┃   NEXT    ┃     \     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    GIF    ┃    ADJ    ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &kp EXCL                           &kp AT                        &kp POUND                        &kp DLLR                         &kp PRCNT                 &kp CARET  &kp AMPS   &kp ASTERISK   &kp SEMI   &kp COLON
        &mt LEFT_SHIFT LS(LA(LC(LG(F4))))  &mt LCTRL LS(LA(LC(LG(F3))))  &mt LEFT_ALT LS(LA(LC(LG(F2))))  &mt LEFT_GUI LS(LA(LC(LG(F1))))  &kp LS(LA(LC(LG(F5))))    &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp GRAVE  &kp HASH
&trans  &kp LS(LA(LC(LG(F10))))            &kp LS(LA(LC(LG(F9))))        &kp LS(LA(LC(LG(F8))))           &kp LS(LA(LC(LG(F7))))           &kp LS(LA(LC(LG(F6))))    &kp UNDER  &kp PLUS   &kp PIPE       &kp TILDE  &trans     &trans
                                                                         &trans                           &trans                           &trans                    &trans     &trans     &trans
            >;
        };

        adjust_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "ADJ";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &tog 0  &trans      &trans      &bt BT_NXT  &bt BT_CLR    &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &tog 4  &kp LG(N0)  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans      &kp LG(N1)  &kp LG(N2)  &kp LG(N3)    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                            &trans      &trans      &trans        &trans  &trans  &trans
            >;
        };

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     B     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                            &kp W                &kp L            &kp Y            &kp P              &kp B       &kp Z         &kp F               &kp O             &kp U             &kp SQT
                            &hrm LEFT_CONTROL C  &hrm LEFT_ALT R  &hrm LEFT_GUI S  &hrm LEFT_SHIFT T  &kp G       &kp M         &hrm RIGHT_SHIFT N  &hrm RIGHT_GUI E  &hrm RIGHT_ALT I  &hrm RIGHT_CONTROL A
&kp LA(LC(LG(LEFT_SHIFT)))  &kp Q                &kp J            &kp V            &kp D              &kp K       &kp X         &kp H               &kp FSLH          &kp COMMA         &kp DOT               &kp SEMI
                                                                  &mkp MB4         &lt 2 SPACE        &mkp MB5    &lt 3 DELETE  &lt 1 BACKSPACE     &kp ESC
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
